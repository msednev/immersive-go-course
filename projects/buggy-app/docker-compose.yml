version: "3.9"
services:

  # Postgres
  postgres:
    image: postgres
    restart: always
    volumes:
      # Data storage
      - type: bind
        source: /tmp/buggy-app-data
        target: /var/lib/postgresql/data
      # Secrets (passwords etc.)
      - type: bind
        source: volumes/secrets
        target: /run/secrets
        read_only: true
      # Initialisation scripts (only run if data volume is empty)
      - type: bind
        source: volumes/init
        target: /docker-entrypoint-initdb.d
        read_only: true
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
      - POSTGRES_HOST=postgres
    ports:
      - "5432:5432"

  migrate:
    build: .
    depends_on:
      - postgres
    volumes:
      # Secrets (passwords etc.)
      - type: bind
        source: volumes/secrets
        target: /run/secrets
        read_only: true
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    command: /out/migrate --path /migrations up
    profiles: ["migrate"]

  auth:
    build: .
    ports:
      - "127.0.0.1:8080:80"
    depends_on:
      - postgres
    volumes:
      # Secrets (passwords etc.)
      - type: bind
        source: volumes/secrets
        target: /run/secrets
        read_only: true
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    command: /out/auth

  auth-debug:
    build:
      context: .
      dockerfile: Dockerfile.debug
    ports:
      - "127.0.0.1:8080:80"
      - "127.0.0.1:4000:4000"
    depends_on:
      - postgres
    volumes:
      # Secrets (passwords etc.)
      - type: bind
        source: volumes/secrets
        target: /run/secrets
        read_only: true
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    command: /go-bin/dlv --listen=':4000' --headless=true --log=true --accept-multiclient --api-version=2 exec /out/auth
    profiles: ["debug"]

  api:
    build: .
    ports:
      - "127.0.0.1:8090:80"
    depends_on:
      - postgres
      - auth
    volumes:
      # Secrets (passwords etc.)
      - type: bind
        source: volumes/secrets
        target: /run/secrets
        read_only: true
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    command: /out/api

  api-debug:
    build:
      context: .
      dockerfile: Dockerfile.debug
    ports:
      - "127.0.0.1:8090:80"
      - "127.0.0.1:4001:4000"
    depends_on:
      - postgres
      - auth-debug
    volumes:
      # Secrets (passwords etc.)
      - type: bind
        source: volumes/secrets
        target: /run/secrets
        read_only: true
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    command: /go-bin/dlv --listen=':4000' --headless=true --log=true --accept-multiclient --api-version=2 exec /out/api
    profiles: ["debug"]

  test:
    build: .
    depends_on:
      - postgres
    volumes:
      # Secrets (passwords etc.)
      - type: bind
        source: volumes/secrets
        target: /run/secrets
        read_only: true
    command: go test /app/...
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    profiles: ["test"]